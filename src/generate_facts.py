import asyncio
import logging
import os
from pathlib import Path
from typing import Generator, Literal

import datasets
import pandas as pd
import typer
from openai import AsyncOpenAI
from pydantic import BaseModel
from tqdm.asyncio import tqdm

logging.basicConfig(
    level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s"
)


tqdm.pandas()

prompts = {
    "write_fact": """"Вы ученый, который хорошо разбирается во всех областях науки. Ваша задача - записать один факт, который следует из аннотации к статье. Вы не можете скопировать текст из аннотации, вам нужно написать факт, который следует из аннотации, но прямо в ней не указан. Примечание: Убедитесь, что извлеченный факт точно выведен из содержания аннотации, без добавления какой-либо дополнительной информации или интерпретации. При написании факта избегай ссылок на аннотацию (в приведенном текст, в данной работе, предложенный метод). Также при написании факта избегай неопределенности, например "с определенным свойствами", "в некоторых состояниях", "определенной длины". Если по аннотации невозможно написать точный факт, то напиши "Аннотация не содержит факт"
Ниже приведены 2 примера фактов и аннотаций, на основе которых они были написаны.

Аннотация к статье:
Ожидается, что снижение уровня гомоцистеина в сыворотке крови с помощью фолиевой кислоты снизит смертность от ишемической болезни сердца. Известно, что максимальное снижение уровня гомоцистеина достигается при приеме фолиевой кислоты в дозе 1 мг/сут, но эффект более низких доз (имеющих отношение к обогащению пищевых продуктов) неясен. МЕТОДЫ Мы рандомизировали 151 пациента с ишемической болезнью сердца на 1 из 5 доз фолиевой кислоты (0,2, 0,4, 0,6, 0,8 и 1,0 мг/сут) или плацебо. Первоначально, через 3 месяца приема добавок и через 3 месяца после прекращения приема фолиевой кислоты, были взяты образцы крови натощак для анализа на содержание гомоцистеина и фолиевой кислоты в сыворотке крови. РЕЗУЛЬТАТЫ: Средний уровень гомоцистеина в сыворотке крови снижался при увеличении дозы фолиевой кислоты до максимума при приеме 0,8 мг фолиевой кислоты в день, когда снижение уровня гомоцистеина (с поправкой на плацебо) составляло 2,7 мкмоль/л (23%), что аналогично известному эффекту приема фолиевой кислоты в дозах 1 мг/сут и выше. Чем выше был исходный уровень гомоцистеина в сыворотке крови человека, тем сильнее была реакция на фолиевую кислоту, но статистически значимое снижение наблюдалось независимо от исходного уровня. Уровень фолиевой кислоты в сыворотке крови повышался примерно линейно (5,5 нмоль/л на каждые 0,1 мг фолиевой кислоты). Индивидуальные колебания уровня гомоцистеина в сыворотке крови, измеренные в группе плацебо, были значительными по сравнению с эффектом приема фолиевой кислоты, что указывает на то, что мониторинг снижения уровня гомоцистеина у конкретного человека нецелесообразен. ВЫВОДЫ Для достижения максимального снижения уровня гомоцистеина в сыворотке крови во всем диапазоне уровней гомоцистеина в популяции, по-видимому, необходима доза фолиевой кислоты в размере 0,8 мг/сут. Нынешние уровни обогащения пищевых продуктов в США позволят достичь лишь небольшой доли достижимого снижения уровня гомоцистеина. ```
Факт из статьи:
`Дефицит витамина В6 снижает уровень гомоцистеина в крови. `

Аннотация к статье:
`Для реакции выделения кислорода (OER) были разработаны известные на Земле катализаторы первого ряда (3d) на основе переходных металлов; однако они работают при потенциалах, значительно превышающих термодинамические требования. Теория функционала плотности предполагает, что не трехмерные металлы с высокой валентностью, такие как вольфрам, могут модулировать трехмерные оксиды металлов, обеспечивая почти оптимальную энергию адсорбции для предлагаемых промежуточных продуктов. Мы разработали метод синтеза при комнатной температуре для получения гелеобразных оксигидроксидных материалов с атомарно однородным распределением металлов. Эти гелеобразные оксигидроксиды FeCoW обладают самым низким перенапряжением (191 милливольт), зарегистрированным при 10 миллиамперах на квадратный сантиметр в щелочном электролите. Катализатор не проявляет признаков разложения после более чем 500 часов работы. Рентгеновское поглощение и компьютерные исследования показывают синергетическое взаимодействие между вольфрамом, железом и кобальтом в создании благоприятной локальной координационной среды и электронной структуры, которые повышают энергетику предложения. ```
Факт из статьи:
`Усовершенствованные катализаторы OER демонстрируют стабильную активность в течение нескольких сотен часов`.

Если в аннотации не содержится фактов, например:
`
В статье рассмотрено становление британо-японских отношений в период биполярности, отражена история формирования двусторонних отношений, а также сотрудничество в экономической, политической, научно-технической и социально-культурной сферах в указанный период. Главный акцент был сделан на рассмотрении зарождения отношений между Великобританией и Японией и анализа динамики их развития.
`
то напиши "Аннотация не содержит факт".

Теперь ваша задача - записать этот факт в следующую аннотацию, точно следуя инструкциям
```
{text}
```
Не пиши никаких вводных слов (например "из аннотации следует, что"), только факт. Напишите свой факт из этого резюме, пожалуйста:
""",
    "complexity": """### Инструкция по классификации фактов по научным статьям

Вы являетесь учёным, обладающим глубокими знаниями во всех областях науки. Ваша задача - определить сложность факта, изложенного в аннотации к научной статье. Факты могут быть классифицированы по трём уровням сложности: простой, средний и сложный. В отдельных случаях факт может быть неопределённым.

### Категории фактов:

#### 1. Простой факт:
Факт очевиден большинству образованных людей и не требует дополнительных исследований или чтений для его подтверждения или опровержения. Такие факты известны из общих знаний.

Примеры простых фактов:
- Экономическая эффективность потребления может варьироваться в зависимости от личностных свойств потребителей.
- В России существует закон, регулирующий проведение медицинских научных исследований с участием человека и/или лабораторных животных.
- Нитраты могут вызывать токсические эффекты у животных.
- Российские вузы сокращают количество бюджетных мест.
- В Республике Алтай представлены многочисленные виды туризма и отдыха.
- У студентов вузов ценность внутреннего успеха выше, чем внешнего.
- Изменение жесткости элементов конструкции здания может быть вызвано разными факторами.
- Преступления, связанные с фальшивомонетничеством, совершались на территории Российской Федерации и Белгородской области.

#### 2. Средний факт:
Факт достаточно сложен, большинству людей понадобится читать специализированные статьи или проводить запросы в интернете, чтобы понять, подтвердить или опровергнуть этот факт.

Примеры средних фактов:
- Поражение молочной железы эхинококком может быть излечено хирургическим путем.
- Татарстан стал более засушливым регионом за последние десятилетия.

#### 3. Сложный факт:
Факт требует специфических знаний или экспертизы в данной научной области для его понимания.

Примеры сложных фактов:
- Прокатка СВС-продуктов в валках прокатного стана перед измельчением в шаровой мельнице увеличивает эффективность измельчения.
- У больных диабетическим макулярным отеком наблюдается повышенный уровень брадикинина в крови.
- Стентирование коронарных артерий не вызывает значимых изменений показателей глобальной и сегментарной продольной систолической деформации миокарда левого желудочка в первые 3 сут после процедуры.

#### 4. Неопределённый факт:
Факт недостаточно ясен, неполон или содержит ссылки, требующие дополнительных разработок или исследований.

Примеры неопределённых фактов:
- Российские компании могут использовать разработанную шкалу для определения уровня развития ориентации на бренд.
- Предыдущие модели теплоусвоения вермикулита были неточными.

### Ваша задача:
Внимательно изучите предоставленный факт и напишите одно из следующих определений сложности факта: "простой", "средний", "сложный" или "неопределенный". Напиши только одно слово, не объясняй причины такой классификации

Вот факт, для которого это нужно написать: `{text}`""",
    "classify_fact": """**Инструкция по разметке аннотаций и фактов**

**Цель**: Цель этого задания - определить, насколько представленный факт соответствует содержанию аннотации научной статьи. Вы будете работать с парами "факт-аннотация" и назначать им один из трех предложенных классов.

**Процедура разметки:**

1. **Внимательно прочитайте** указанный факт и соответствующую ему аннотацию из научной статьи.

2. **Определите соответствие** между фактом и содержанием аннотации, используя ниже приведенные классы.

**Классы для разметки:**

1. **Аннотация подтверждает факт**: Выберите этот класс, если информация в аннотации подтверждает или прямо указывает на изложенный в ней факт. Выбирайте этот класс только если факт в точности соответствует аннотации, без необходимости "додумывать" что-либо.

2. **Аннотация не подтверждает или противоречит факту**

Возможные причины для выбора этого класса:
- **В аннотации не говорится о факте**: аннотация вообще не касается данного факта, вне зависимости от его правдивости.

   - Пример 1

      **Факт:** "Параметры ПИД-регулятора, рассчитанные методом локализации, обеспечивают **устойчивость** линейных систем второго порядка"

      **Аннотация:** "Рассмотрена задача расчета параметров ПИД-регулятора. В работе предлагается ее решение на основе метода локализации. Применение этого метода обеспечивает **желаемые свойства** для линейных систем второго порядка..."

      **Разбор:** В аннотации говорится про желаемые свойства, но не уточняется какие именно, а в факте говорится про конкретное свойство - устойчивость. Значит в аннотации **не говорится** о факте.

   - Пример 2

      **Факт:** Диэлектрические подповерхностные объекты имеют уникальные резонансные свойства в СВЧ-диапазоне.

      **Аннотация:** Рассмотрены резонансные свойства диэлектрических подповерхностных объектов в СВЧ-диапазоне. Приведены формулы и экспериментальные результаты по определению свойств ряда малоразмерных (Ø ~ 200 мм) диэлектрических объектов, находящихся в песке влажностью 6 % на глубинах до 8 см, в частотном диапазоне 270-620 МГц, а также металлических пружин, которые могут быть в составе этих объектов, в частотном диапазоне 900-1200 МГц. Показана возможность идентификации объектов по их амплитудно-частотным характеристикам в СВЧ-диапазоне.

      **Разбор:** в тексте аннотации не говорится про уникальные свойства

- **Аннотация опровергает факт**: информация в аннотации прямо противоречит заявленному факту.
- **Факт содержит в себе неопределенность**: факт ссылается на другие исследования или используется двусмысленная формулировка (например, "в одном из исследований", "в предыдущей работе").
- **Факт очевиден из общих знаний**: Этот класс применяется, если факт настолько базовый или общеизвестный, что не требует подтверждения через научную статью.
   - Примеры:
      - В Республике Алтай представлены многочисленные виды туризма и отдыха
      - Российские вузы сокращают количество бюджетных мест

3. **Требуется дополнительная экспертиза**: Выберите этот класс, если для оценки связи факта и аннотации требуется специальная экспертиза, выходящая за рамки ваших знаний.

**Важно:**

- Расценивайте смысл и контекст фактов и аннотаций, избегая слишком буквального истолкования.""",
    "write_negative_fact": """Вы ученый, который хорошо разбирается во всех областях науки. Ваша задача - написать один факт, который был бы релевантен аннотации, но не следует из нее. Не используй отрициание, вместо этого напишите факт, который не подтверждается аннотацией, но релевантен ей! Вы не можете скопировать текст из аннотации, вам нужно написать факт, который не следует из аннотации. Примечание: Убедитесь, что извлеченный факт точно выведен из содержания аннотации, без добавления какой-либо дополнительной информации или интерпретации. При написании факта избегай ссылок на аннотацию (в приведенном текст, в данной работе, предложенный метод). Также при написании факта избегай неопределенности, например "с определенным свойствами", "в некоторых состояниях", "определенной длины". Если по аннотации невозможно написать точный факт, то напиши "Аннотация не содержит факт"
Ниже приведены 2 примера фактов и аннотаций, на основе которых они были написаны.

Аннотация к статье:
```
Статья посвящена актуальным проблемам установления уголовного запрета в сфере профессиональной медицинской деятельности. Проанализированы предложения Следственного комитета РФ о внесении изменений в действующий Уголовный Кодекс РФ, на основании социологического опроса и изучения уголовных дел, сделаны выводы о необходимости реформы уголовного закона. Основным является вывод о невозможности решения актуальных проблем в российском здравоохранении исключительно уголовно-правовыми средствами.
```
Факт из статьи:
`Актуальные проблемы в российском здравоохранении могут быть решены исключительно уголовно-правовыми средствами`

Аннотация к статье:
```
Рассмотрены вопросы создания системы охраны территорий и объектов стратегического назначения. Предложены структура и способ построения такой системы, использующие методы теории решеток. Для обработки и анализа информации с датчиков физических величин и последующего принятия решений применяются решетки, построенные с помощью оператора замыкания.
```
Факт из статьи:
`Решетки могут быть построены без использования оператора замыкания`

Если в аннотации не содержится фактов, например:
```
В статье рассмотрено становление британо-японских отношений в период биполярности, отражена история формирования двусторонних отношений, а также сотрудничество в экономической, политической, научно-технической и социально-культурной сферах в указанный период. Главный акцент был сделан на рассмотрении зарождения отношений между Великобританией и Японией и анализа динамики их развития.
```
то напиши "Аннотация не содержит факт".

Пример неподходящего факта:
Аннотация к статье:
```В статье обсуждаются вопросы взаимосвязи токсичности сточных вод и их химического состава. Для ряда гидрохимических показателей установлена достоверная связь между показателем токсичности, определявшимся с использованием методики, где в качестве тест-организма выступает P. Caudatum.```
Факт из статьи:
`Для ряда гидрохимических показателей не существует достоверной связи между показателем токсичности, определявшимся с использованием методики, где в качестве тест-организма выступает P. Caudatum.`
Факт не подходит, потому что можно удалить "не" и факт будет верным.

Не добавяй ничего к ответу, напиши только факт. Не пиши свои рассуждения, только факт!
Теперь ваша задача - записать этот факт в следующую аннотацию, точно следуя инструкциям
Аннотация к статье: ```{text}```
Факт из статьи: """,
    "exctract_fact": "Перед тобой цепочка рассуждений. Выдели и напиши финальный ответ из этой цепочки. Не изменяй ответ, просто скопируй его. Если в тексте нет рассуждений и дан только один ответ, то просто напиши его. ```{text}```",
    "relevancy_fact": """Вы ученый, который хорошо разбирается во всех областях науки. Задача - оценить релевантность факта аннотации и насктолько аннотация подтверждает факт. На выходе нужно написать json.
Пример ответа:
```
{{
    "relevance": "Релевантность факта аннотации",
    "support": "Насколько аннотация подтверждает факт"
}}
```
relevance и support могут принимать значения от 0 до 10, где 0 - не релевантно (не подтверждает факт), 10 - максимально релевантно (подтверждает факт).

```{text}```""",
}


class Markup(BaseModel):
    markup_class: str
    short_explanation: str


def dict_to_list(data):
    # Extract keys and zip the values together
    keys = list(data.keys())
    values = zip(*data.values())

    # Create a list of dictionaries
    result = [dict(zip(keys, value)) for value in values]

    return result


def chunks(data: list[dict], n) -> Generator[list[dict], None, None]:
    """Yield successive n-sized chunks from lst."""
    for i in range(0, len(data), n):
        batch = data[i : i + n]
        if isinstance(batch, dict):
            batch = dict_to_list(batch)
        yield batch


class RateLimiter:
    def __init__(self, max_requests: int, time_window: int = 60):
        self.max_requests = max_requests
        self.time_window = time_window
        self.requests = []
        self._lock = asyncio.Lock()

    async def acquire(self):
        async with self._lock:
            now = asyncio.get_event_loop().time()
            self.requests = [
                req for req in self.requests if now - req < self.time_window
            ]

            if len(self.requests) >= self.max_requests:
                sleep_time = self.requests[0] + self.time_window - now
                if sleep_time > 0:
                    await asyncio.sleep(sleep_time)

            self.requests.append(now)


async def get_completion(
    semaphore: asyncio.Semaphore,
    client: AsyncOpenAI,
    text: str,
    prompt_name: str,
    model_name: str,
    rate_limiter: RateLimiter,
    max_completion_tokens: int | None = None,
):
    async with semaphore:
        try:
            await rate_limiter.acquire()
            response = await client.chat.completions.create(
                messages=[
                    {
                        "role": "user",
                        "content": prompts[prompt_name].format(text=text),
                    }
                ],
                model=model_name,
                max_tokens=max_completion_tokens,
            )
            return response.choices[0].message.content
        except Exception as e:
            logging.error(f"Failed to get completion for text: {text} with error: {e}")
            return None


async def get_parse(
    semaphore: asyncio.Semaphore,
    client: AsyncOpenAI,
    text: str,
    prompt_name: str,
    model_name: str,
    rate_limiter: RateLimiter,
    max_completion_tokens: int | None = None,
):
    async with semaphore:
        try:
            await rate_limiter.acquire()
            response = await client.beta.chat.completions.parse(
                messages=[
                    {"role": "system", "content": prompts[prompt_name]},
                    {"role": "user", "content": text},
                ],
                n=1,
                model=model_name,
                response_format=Markup,
            )
            return (
                response.choices[0].message.parsed.model_dump()
                if response.choices[0].message.parsed is not None
                else None
            )
        except Exception as e:
            logging.error(f"Failed to get completion for text: {text} with error: {e}")
            return None


async def process_batch(
    batch: list[str],
    semaphore: asyncio.Semaphore,
    client: AsyncOpenAI,
    prompt_name: str,
    mode: Literal["completion", "parse"],
    model_name: str,
    rate_limiter: RateLimiter,
    max_completion_tokens: int | None = None,
):
    func = get_completion if mode == "completion" else get_parse
    return await tqdm.gather(
        *[
            func(
                semaphore,
                client,
                text,
                prompt_name,
                model_name,
                rate_limiter,
                max_completion_tokens,
            )
            for text in batch
        ]
    )


def main(
    input_file: Path,  # "/data/elibrary/ru_sci_bench_clean.csv"
    output_file: Path,
    limit: int = -1,
    chunk_size: int = 1000,
    prompt_name: str = "write_fact",
    model_name: str = "meta-llama/Meta-Llama-3.1-405B-Instruct-FP8",
    base_url: str = "http://0.0.0.0:8000/v1",
    source_column_name: str = "ru_abstract",
    target_column_name: str = "ruscifact",
    mode: str = "completion",
    requests_per_minute: int = 10000000,
    max_completion_tokens: int | None = None,
):
    assert mode in ["completion", "parse"]

    async def _main():
        if input_file.is_file():
            df = pd.read_csv(input_file)
            if limit != -1:
                df = df.sample(n=limit, random_state=42)
            data = df.to_dict(orient="records")
        else:
            data = datasets.Dataset.load_from_disk(str(input_file)).filter(
                lambda x: x[source_column_name] is not None
            )

        semaphore = asyncio.Semaphore(10)
        client = AsyncOpenAI(
            base_url=base_url, api_key=os.environ.get("API_KEY", "dont matter")
        )

        output_file.parent.mkdir(exist_ok=True, parents=True)
        rate_limiter = RateLimiter(requests_per_minute)

        for i, batch_df in enumerate(chunks(data, chunk_size)):
            output = output_file.parent / (
                output_file.stem + f"_{i}" + output_file.suffix
            )
            if output.exists():
                print(output)
                batch_df = pd.read_csv(output)
                completions = await process_batch(
                    [
                        row[source_column_name]
                        for _, row in batch_df.iterrows()
                        if target_column_name not in row
                        or pd.isna(row[target_column_name])
                    ],
                    semaphore,
                    client,
                    prompt_name,
                    mode,
                    model_name,
                    rate_limiter,
                    max_completion_tokens,
                )
                batch_df.loc[
                    batch_df[target_column_name].isnull(), target_column_name
                ] = completions
            else:
                completions = await process_batch(
                    [row[source_column_name] for row in batch_df],
                    semaphore,
                    client,
                    prompt_name,
                    mode,
                    model_name,
                    rate_limiter,
                    max_completion_tokens,
                )
                batch_df = [
                    row | {target_column_name: completion}
                    for row, completion in zip(batch_df, completions)
                ]

            pd.DataFrame(batch_df).to_csv(output, index=False)

    asyncio.run(_main())


if __name__ == "__main__":
    typer.run(main)
